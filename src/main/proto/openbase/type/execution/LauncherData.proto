syntax = "proto2";

package openbase.type.execution;

import "openbase/type/language/Label.proto";
import "openbase/type/timing/Timestamp.proto";

option java_package = "org.openbase.type.execution";
option java_outer_classname = "LauncherDataType";

/**
 * Description of a launcher data type.
 *
 * @author Marian Pohling <a href="mailto:divine@openbase.org">Divine Threepwood</a>
 */
message LauncherData {

    /**
     * The state definitions.
     */
    enum LauncherState {

        /**
        * Unknown state.
        */
        UNKNOWN = 0;

        /**
        * Initializing state.
        */
        INITIALIZING = 1;

        /**
        * State if the launcher is currently starting.
        */
        LAUNCHING = 2;

        /**
        * State if the launcher is currently running.
        */
        RUNNING = 3;

        /**
        * State if the launcher is currently stopping.
        */
        STOPPING = 4;

        /**
        * State if the launcher was stopped.
        */
        STOPPED = 5;

        /**
        * State if the launcher failed during execution.
        */
        ERROR = 6;
    }

    /**
     * This transaction id is an increasing number indicating the latest data updated of a launcher.
     */
    optional uint64 transaction_id = 1;

    /**
     * A unique launcher identifier.
     */
    optional string id = 100;

    /**
     * A list of aliases of this unit.
     */
    repeated string alias = 110;

    /**
     * Label of the related launcher.
     */
    optional .openbase.type.language.Label label = 200;

    /**
     * The state the launcher is in.
     */
    optional LauncherState launcher_state = 300;

    /**
     * Flag is set if the application was successfully verified after launching.
     * In case the verification has failed, maybe some application functions are restricted.
     * Returns true if the application verification was successful after launching.
     */
    optional bool verified = 400;

    /**
     * Timestamp of the launch time. Can e.g. be used to calulate the current uptime of the launcher.
     */
    optional .openbase.type.timing.Timestamp launch_time = 500;
}
