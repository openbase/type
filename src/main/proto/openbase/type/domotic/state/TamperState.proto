syntax = "proto2";

package openbase.type.domotic.state;

import "openbase/type/timing/Timestamp.proto";
import "openbase/type/domotic/action/ActionDescription.proto";


option java_package = "org.openbase.type.domotic.state";
option java_outer_classname = "TamperStateType";

/**
 * Basic sensor or object state.
 * Used by devices that have a tamper function.
 *
 * @author Tamino Huxohl <thuxohl@techfak.uni-bielefeld.de>
 */
message TamperState {

    /**
     * The state definitions.
     */
    enum State {

        /**
         * Unknown state.
         */
        UNKNOWN = 0;

        /**
         * No tamper-proof.
         */
        NO_TAMPER = 1;

        /**
         * Tamper-proof.
         */
        TAMPER = 2;
    }

    /**
     * The tamper state.
     */
    optional State value = 100;

    /**
     * Map entry for a mapping from state values onto there last occurrence.
     * This message has been introduced because of the missing map feature in protobuf 2.
     */
    message MapFieldEntry {

        /**
         * The state value.
         */
        optional State key = 1;

        /**
         * The timestamp of the last occurrence.
         */
        optional .openbase.type.timing.Timestamp value = 2;
    }

    /**
     * A mapping of all state values onto there last occurrence.
     * This mapping can be used for detecting state transitions.
     */
    repeated MapFieldEntry last_value_occurrence = 1000;

    /**
     * Timestamp of the occurency of this event.
     */
    optional .openbase.type.timing.Timestamp timestamp = 300;

    /**
     * This field contains the description of the action which is responsible for this service state.
     */
    optional .openbase.type.domotic.action.ActionDescription responsible_action = 400;

    message AggregatedValueCoverageMapFieldEntry {

        /**
         * The state value.
         */
        optional State key = 1;

        /**
         * The coverage of the state.
         */
        optional double coverage = 2;
    }
    repeated AggregatedValueCoverageMapFieldEntry aggregated_value_coverage = 500;

}

