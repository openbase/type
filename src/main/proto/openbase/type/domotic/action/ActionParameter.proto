syntax = "proto2";

package openbase.type.domotic.action;

option java_package = "org.openbase.type.domotic.action";
option java_outer_classname = "ActionParameterType";

import "openbase/type/domotic/action/ActionDescription.proto";
import "openbase/type/language/Label.proto";
import "openbase/type/domotic/action/ActionInitiator.proto";
import "openbase/type/domotic/service/ServiceStateDescription.proto";
import "openbase/type/domotic/action/ActionPriority.proto";
import "openbase/type/domotic/action/ActionEmphasis.proto";
import "openbase/type/domotic/authentication/AuthToken.proto";

/**
 * Description of possible paramters to define an action.
 *
 * @author Marian Pohling <mpohling@cit-ec.uni-bielefeld.de>
 * @author Tamino Huxohl <thuxohl@techfak.uni-bielefeld.de>
 */
message ActionParameter {

    /**
     * A label for the action description.
     *
     * Note: Field is optional.
     */
    optional .openbase.type.language.Label label = 20;

    /**
     * The initiator of this action.
     *
     * Note: Field is required to define the action.
     */
    optional .openbase.type.domotic.action.ActionInitiator action_initiator = 40;

    /**
     * The state which this action shall apply.
     *
     * Note: Field is required to define the action.
     */
    optional .openbase.type.domotic.service.ServiceStateDescription service_state_description = 70;

    /**
     * The execution priority of this action used for the action ranking.
     *
     * Note: Default priority is NORMAL
     */
    optional .openbase.type.domotic.action.ActionPriority.Priority priority = 80 [default = NORMAL];

    /**
     * The emphasis categories representing the optimization intention of this action used for the ranking.
     *
     * Note: Field is required to define the action.
     */
    repeated .openbase.type.domotic.action.ActionEmphasis.Category category = 90;

    /**
     * The defined runtime period of this action in microseconds.
     * The action will be finished or rejected (if previously scheduled) after expiration.
     * 0 is not a valid value as time period and the action will directly rejected to avoid state flickering.
     * Be aware that the upper boarder of the execution time will always be limited by the controller to 15 minutes.
     * You can extent the execution of an action via the last_extension field, to archive a longer execution time period.
     *
     * The default value is 15 minutes.
     */
    optional uint64 execution_time_period = 100 [default = 900000000];

    /**
     * If this action was caused by another action, those action is referred by this field to enable the reconstruction of the complete action chain.
     *
     * Note: This field is only required if the action is a result of another one.
     */
    optional .openbase.type.domotic.action.ActionDescription cause = 110;

    /**
     * Flag defines if the action execution can be continued after interruption.
     * This means if this action is not interruptable but was relegated by another one, it is directly rejected and whill not be scheduled again.
     */
    optional bool interruptible = 120 [default = true];

    /**
     * Flag defines if this action supports it, to be scheduled.
     * If not than the action will directly rejected in case a currenly higher ranked action is blocking the unit.
     */
    optional bool schedulable = 130 [default = true];

    /**
     * Flag defines if this action is replaced by another action of the same user.
     * By default an individual unit can only schedule one action of each system user and one additional executed by a humans.
     * If this flag is set to false an individual unit can hold this action in addition to another human action on stack.
     * However, in this case the unit action chain has to alternate as well to avoid the replacement.
     * Only this guarantees no overflow of the action stack.
     */
    optional bool replaceable = 131 [default = true];

    /**
     * This flag defines if the action should be auto extended with a lower priority as soon as its max execution_time_period is reached.
     * This flag is only interpreted for human action and has no effect for system actions. System action need to be periodically extended by the responsible
     * instance as kind of heartbeat verification process.
     */
    optional bool auto_continue_with_low_priority = 135 [default = false];

    /**
     * A bundle of authentication and authorization tokens used to acquire permissions:
     *
     * authentication token:
     *     The token with which the actions is authenticated.
     *     If this field is empty the user logged in at the default session manager is authenticated.
     *     If this field is set, the initiator will always be overwritten by the user specified in this token.
     *
     * authorization token:
     *    The token with which the action is authorized.
     *    If this field is empty, the permissions of the user logged in at the default session manager are used for authorziation.
     *
     */
    optional .openbase.type.domotic.authentication.AuthToken auth_token = 140;
}

