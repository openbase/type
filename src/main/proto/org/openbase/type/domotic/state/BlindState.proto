syntax = "proto2";

package org.openbase.type.domotic.state;

import "org/openbase/type/timing/Timestamp.proto";
import "org/openbase/type/domotic/action/ActionDescription.proto";

option java_outer_classname = "BlindStateType";


/**
 * Basic sensor or object state.
 * Used by objects like rollershutters.
 *
 * @author Tamino Huxohl <thuxohl@techfak.uni-bielefeld.de>
 */
message BlindState {

    /**
     * The state definitions.
     */
    enum State {

        /**
         * Unknown state.
         */
        UNKNOWN = 0;

        /**
         * Down state.
         */
        DOWN = 1;

        /**
         * Stop state.
         */
        STOP = 2;

        /**
         * Up state.
         */
        UP = 3;
    }

    /**
     * The movement state of the blind state.
     */
    optional State value = 101;

    /**
     * Map entry for a mapping from state values onto there last occurrence.
     * This message has been introduced because of the missing map feature in protobuf 2.
     */
    message MapFieldEntry {

        /**
         * The state value.
         */
        optional State key = 1;

        /**
         * The timestamp of the last occurrence.
         */
        optional .org.openbase.type.timing.Timestamp value = 2;
    }

    /**
     * A mapping of all state values onto there last occurrence.
     * This mapping can be used for detecting state transitions.
     */
    repeated MapFieldEntry last_value_occurrence = 1000;

    /**
     * The value which represents the height of the blind in percent. Range [0..1].
     * If this value is 1 than the blind is at the very top.
     */
    optional double opening_ratio = 200;

    /**
     * Timestamp of the occurrence of this event.
     */
    optional .org.openbase.type.timing.Timestamp timestamp = 300;

    /**
     * This field contains the description of the action which is responsible for this service state.
     */
    optional .org.openbase.type.domotic.action.ActionDescription responsible_action = 400;
}


