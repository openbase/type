package rstexperimental.homeautomation.openhab;

import "rstexperimental/homeautomation/openhab/HSB.proto";
import "rstexperimental/homeautomation/openhab/IncreaseDecreaseHolder.proto";
import "rstexperimental/homeautomation/openhab/OnOffHolder.proto";
import "rstexperimental/homeautomation/openhab/OpenClosedHolder.proto";
import "rstexperimental/homeautomation/openhab/Percent.proto";
import "rstexperimental/homeautomation/openhab/StopMoveHolder.proto";
import "rstexperimental/homeautomation/openhab/UpDownHolder.proto";

option java_outer_classname = "OpenhabCommandType";

/**
 * Basic state/command used by openhab. Should contain a
 * command type and the related value.
 *
 * @author Tamino Huxohl <thuxohl@techfak.uni-bielefeld.de>
 */
message OpenhabCommand {

    /**
     * The state/command type.
     */
    enum CommandType {

        HSB = 10;
        DECIMAL = 20;
        INCREASEDECREASE = 30;
        ONOFF = 40;
        OPENCLOSED = 50;
        PERCENT = 60;
        STOPMOVE  = 70;
        STRING = 80;
        UPDOWN = 90;

    }

    /**
     * Type describing how the command shall be executed.
     */
    enum ExecutionType {

        /**
         * Synchronous execution of the command.
         */
        SYNCHRONOUS = 10;

        /**
         * Asynchronous execution of the command.
         */
        ASYNCHRONOUS = 20;

    }

    /**
     * The item name to send the command/state to.
     */
    required string item = 10;

    /**
     * The state/command type.
     */
    required CommandType type = 20;

    /**
     * The HSB color type.
     */
    optional .rstexperimental.homeautomation.openhab.HSB hsb = 30;

    /**
     * The decimal type.
     */
    optional double decimal = 40;

    /**
     * The increase or decrease type.
     */
    optional .rstexperimental.homeautomation.openhab.IncreaseDecreaseHolder increase_decrease = 50;

    /**
     * The on or off type.
     */
    optional .rstexperimental.homeautomation.openhab.OnOffHolder on_off = 60;

    /**
     * The open or closed type.
     */
    optional .rstexperimental.homeautomation.openhab.OpenClosedHolder open_closed = 70;

    /**
     * The percent type.
     */
    optional .rstexperimental.homeautomation.openhab.Percent percent = 80;

    /**
     * The stop or move type.
     */
    optional .rstexperimental.homeautomation.openhab.StopMoveHolder stop_move = 90;

    /**
     * The string type.
     */
    optional string text = 100;

    /**
     * The up or down type.
     */
    optional .rstexperimental.homeautomation.openhab.UpDownHolder up_down = 110;

    /**
     * The execution type;
     */
    optional ExecutionType execution_type = 120;
}

