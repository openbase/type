package rst.domotic.registry;

option java_outer_classname = "UnitRegistryDataType";

import "rst/domotic/authentication/PermissionConfig.proto";
import "rst/domotic/unit/UnitConfig.proto";
import "rst/domotic/unit/UnitTemplate.proto";
import "rst/domotic/service/ServiceTemplate.proto";

/**
 * Description of a unit registry.
 *
 * @author Tamino Huxohl <thuxohl@techfak.uni-bielefeld.de>
 */
message UnitRegistryData {

    /**
     * The label of the unit registry.
     */
    optional string label = 100;

    /**
     * The list of registered unit templates.
     */
    repeated .rst.domotic.unit.UnitTemplate unit_template = 200;

    /**
     * The list of registered dal unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig dal_unit_config = 300;

    /**
     * The list of registered device unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig device_unit_config = 400;

    /**
     * The list of registered unit group unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig unit_group_unit_config = 500;

    /**
     * The list of registered scene unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig scene_unit_config = 600;

    /**
     * The list of registered agent unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig agent_unit_config = 700;

    /**
     * The list of registered app unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig app_unit_config = 800;

    /**
     * The list of registered user unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig user_unit_config = 900;

    /**
     * The list of registered authorization group unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig authorization_group_unit_config = 1000;

    /**
     * The list of registered location unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig location_unit_config = 1100;

    /**
     * The list of registered connection unit configs.
     */
    repeated .rst.domotic.unit.UnitConfig connection_unit_config = 1200;

    /**
     * The list of registered scene templates.
     */
    repeated .rst.domotic.service.ServiceTemplate service_template = 1250;

    /**
     * Read only flag for the dal unit config registry.
     */
    optional bool dal_unit_config_registry_read_only = 1300;

    /**
     * Read only flag for the device unit config registry.
     */
    optional bool device_unit_config_registry_read_only = 1400;

    /**
     * Read only flag for the unit group unit config registry.
     */
    optional bool unit_group_unit_config_registry_read_only = 1500;

    /**
     * Read only flag for the scene unit config registry.
     */
    optional bool scene_unit_config_registry_read_only = 1600;

    /**
     * Read only flag for the agent unit config registry.
     */
    optional bool agent_unit_config_registry_read_only = 1700;

    /**
     * Read only flag for the app unit config registry.
     */
    optional bool app_unit_config_registry_read_only = 1800;

    /**
     * Read only flag for the user unit config registry.
     */
    optional bool user_unit_config_registry_read_only = 1900;

    /**
     * Read only flag for the authorization group unit config registry.
     */
    optional bool authorization_group_unit_config_registry_read_only = 2000;

    /**
     * Read only flag for the location unit config registry.
     */
    optional bool location_unit_config_registry_read_only = 2100;

    /**
     * Read only flag for the connection unit config registry.
     */
    optional bool connection_unit_config_registry_read_only = 2200;

    /**
     * Read only flag for the unit template registry.
     */
    optional bool unit_template_registry_read_only = 2300;

    /**
     * Read only flag for the service template registry.
     */
    optional bool service_template_registry_read_only = 2350;

    /**
     * Global read-only flag for the unit config registry.
     */
    optional bool unit_config_registry_read_only = 3600;

    /**
     * Consistent flag for the dal unit config registry.
     */
    optional bool dal_unit_config_registry_consistent = 2400;

    /**
     * Consistent flag for the device unit config registry.
     */
    optional bool device_unit_config_registry_consistent = 2500;

    /**
     * Consistent flag for the unit group unit config registry.
     */
    optional bool unit_group_unit_config_registry_consistent = 2600;

    /**
     * Consistent flag for the scene unit config registry.
     */
    optional bool scene_unit_config_registry_consistent = 2700;

    /**
     * Consistent flag for the agent unit config registry.
     */
    optional bool agent_unit_config_registry_consistent = 2800;

    /**
     * Consistent flag for the app unit config registry.
     */
    optional bool app_unit_config_registry_consistent = 2900;

    /**
     * Consistent flag for the user unit config registry.
     */
    optional bool user_unit_config_registry_consistent = 3000;

    /**
     * Consistent flag for the authorization group unit config registry.
     */
    optional bool authorization_group_unit_config_registry_consistent = 3100;

    /**
     * Consistent flag for the location unit config registry.
     */
    optional bool location_unit_config_registry_consistent = 3200;

    /**
     * Consistent flag for the connection unit config registry.
     */
    optional bool connection_unit_config_registry_consistent = 3300;

    /**
     * Consistent flag for the unit template registry.
     */
    optional bool unit_template_registry_consistent = 3400;

    /**
     * Consistent flag for the service template registry.
     */
    optional bool service_template_registry_consistent = 3450;

    /**
     * Global consistent flag for the unit config registry.
     */
    optional bool unit_config_registry_consistent = 3500;

    /**
     * Global permission config for the unit config registry.
     */
    optional .rst.domotic.authentication.PermissionConfig permission_config = 3700;

    /**
     * A transaction id indicating which action was the last one executed by the unit. The id increases
     * with every action.
     */
    optional uint64 transaction_id = 3800;
}

