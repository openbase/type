syntax = "proto2";

package rst.guidelight;

option java_outer_classname = "PathControlType";

/**
 * Represents the path control command for the guidelight system
 *
 * Path mode: Enables guidelight from startnode towards destination node
 * Group mode: Enables all guidelights towards destination node
 * Evac mode: Enables all guidelights to show the way to the nearest exit
 *
 * Node indexes are in the range [1..n]
 * The same as in the floor plan and circuit diagram from Hanning & Kahl
 * Use 0 for unsupplied values or when using proto 3 serializer.
 *
 * For path mode use: PathState=[ON, GUIDE, BLINK], Start, Dest and optional Priority
 * To clear a single path use: PathState=OFF, Start and Dest
 *
 * For group mode use: PathState=[ON, GUIDE, BLINK], Dest
 *
 * For evac mode use: PathState=EVAC
 *
 * To clear all paths, group or evac mode use: PathState=OFF
 *
 * @author Michael Wiese <m.wiese@helectronics.de>
 **/
message PathControl {
    /**
     * Display mode of a lightband
     **/
    enum LightbandState {
        UNKNOWN = 0;
        OFF = 1; // Used to clear existing paths or group/evac mode
        ON = 2;
        GUIDE = 3; // Shows direction towards destination
        BLINK = 4; // Blinks with all LEDs (no direction visible)
        EVAC = 5; // Evacuation mode
    }
    required LightbandState path_state = 1;
    // First node has ID 1
    optional uint32 start_node = 2;
    optional uint32 dest_node = 3;
    /**
     * True: Priority for path.
     * When paths collide, the path with the higher priority value overrides the other.
     */
    optional uint32 priority = 4 [default = 0];
}
